import { FeeBumpTransaction, Transaction } from "stellar-base";
import { SorobanRpc } from "./soroban_rpc";
/**
 * Combines the given raw transaction alongside the simulation results.
 *
 * @param raw   the initial transaction, w/o simulation applied
 * @param networkPassphrase   the network this simulation applies to
 * @param simulation  the Soroban RPC simulation result
 *
 * @returns a new, cloned transaction with the proper auth and resource (fee,
 *    footprint) simulation data applied
 *
 * @note if the given transaction already has authorization entries in a host
 *    function invocation (see {@link Operation.invokeHostFunction}), **the
 *    simulation entries are ignored**.
 *
 * @see {Server.simulateTransaction}
 * @see {Server.prepareTransaction}
 */
export declare function assembleTransaction(raw: Transaction | FeeBumpTransaction, networkPassphrase: string, simulation: SorobanRpc.SimulateTransactionResponse): Transaction;
